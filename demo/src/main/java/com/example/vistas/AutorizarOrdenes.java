/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.example.vistas;

import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import com.example.EstructurasDeDatos.ListaSimple;
import com.example.Model.Orden;
import com.example.Model.Paciente;
import com.example.Service.GestionPacientesImp;

/**
 *
 * @author JUAN DAVID FUENTES
 */
public class AutorizarOrdenes extends javax.swing.JFrame {

    GestionPacientesImp gestionPacientesImp = new GestionPacientesImp();
    ListaSimple<Paciente> pacientes;
    Paciente pacienteSeleccionado;

    /**
     * Creates new form AutorizarOrdenes
     */
    public AutorizarOrdenes() {

        gestionPacientesImp.cargarPacientesDesdeJSON("pacientes.json");
        pacientes = gestionPacientesImp.getListaPacientes();
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButtonPagar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldPacienteNombre1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaNoPagas = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaPagas = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(42, 39, 69));

        jLabel3.setBackground(new java.awt.Color(42, 49, 69));
        jLabel3.setFont(new java.awt.Font("Roboto", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Busqueda Paciente");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\JUAN DAVID FUENTES\\Desktop\\png\\caduceo.png")); // NOI18N
        jLabel7.setToolTipText("");

        jButtonBuscar.setBackground(new java.awt.Color(42, 39, 69));
        jButtonBuscar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jButtonBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String nombreABuscar = jTextField1.getText();
                DefaultTableModel modeloTabla = (DefaultTableModel) jTable1.getModel();
                modeloTabla.setRowCount(0);
                for (int i = 0; i < pacientes.size(); i++) {
                    Paciente paciente = pacientes.getElementAt(i);
                    if (paciente.getNombres().toLowerCase().contains(nombreABuscar.toLowerCase())) {
                        Object[] fila = { paciente.getId(), paciente.getNombres(), paciente.getApellidos(),
                                paciente.getEdad(), paciente.getIdentificacion(), paciente.getNumeroTelefono() };
                        modeloTabla.addRow(fila);
                    }
                }
            }
        });

        jTable1.setFont(new java.awt.Font("Roboto", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null }
                },
                new String[] {
                        "ID", "Nombre", "Apellido", "Edad", "Identificacíon", "Teléfono"
                }));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(30, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                jPanel2Layout.createSequentialGroup()
                                                        .addComponent(jTextField1)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jButtonBuscar,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 120,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.PREFERRED_SIZE, 547,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addContainerGap()));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 600, 530));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel1.setText("Exámenes");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 40));

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\JUAN DAVID FUENTES\\Desktop\\png\\24px.png")); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jButtonPagar.setBackground(new java.awt.Color(42, 39, 69));
        jButtonPagar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jButtonPagar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPagar.setText("Pagar");
        jButtonPagar.setActionCommand("");
        jButtonPagar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if (pacienteSeleccionado != null) {
                    pagarOrden(pacienteSeleccionado, jTextAreaNoPagas);
                    mostrarOrdenesPaciente(pacienteSeleccionado, jTextAreaPagas, jTextAreaNoPagas);
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, seleccione un paciente primero.");
                }
            }
        });
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTable1.getSelectedRow();
                    if (selectedRow != -1) {
                        int idPacienteSeleccionado = (int) jTable1.getValueAt(selectedRow, 0);
                        pacienteSeleccionado = obtenerPacientePorID(idPacienteSeleccionado);

                        if (pacienteSeleccionado != null) {
                            mostrarOrdenesPaciente(pacienteSeleccionado, jTextAreaPagas,
                                    jTextAreaNoPagas);
                        }
                    }
                }
            }
        });
        jPanel1.add(jButtonPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 470, 120, 30));

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel6.setText("Ordenes Pagas");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel10.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel10.setText("Ordenes No pagas");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        jTextFieldPacienteNombre1.setForeground(new java.awt.Color(153, 153, 153));
        jTextFieldPacienteNombre1.setToolTipText("");
        jTextFieldPacienteNombre1.setBorder(null);
        jTextFieldPacienteNombre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPacienteNombre1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldPacienteNombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 210, -1));

        jTextAreaNoPagas.setColumns(20);
        jTextAreaNoPagas.setRows(5);
        jScrollPane2.setViewportView(jTextAreaNoPagas);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 240, 140));

        jLabel2.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel2.setText("Autorizar");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, 40));

        jTextAreaPagas.setColumns(20);
        jTextAreaPagas.setRows(5);
        jScrollPane4.setViewportView(jTextAreaPagas);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 240, 140));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 526,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButtonPagarActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jTextFieldPacienteNombre1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AutorizarOrdenes.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AutorizarOrdenes.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AutorizarOrdenes.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AutorizarOrdenes.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AutorizarOrdenes().setVisible(true);
            }
        });
    }

    private void mostrarOrdenesPaciente(Paciente paciente, JTextArea textAreaOrdenesPagadas,
            JTextArea textAreaOrdenesNoPagadas) {
        textAreaOrdenesPagadas.setText("");
        textAreaOrdenesNoPagadas.setText("");

        ListaSimple<Orden> ordenes = paciente.getOrdenes();
        for (int i = 0; i < ordenes.size(); i++) {
            Orden orden = ordenes.getElementAt(i);
            if (orden.isEstadoAutorizacion()) {
                textAreaOrdenesPagadas.append("Orden " + (i + 1) + ":\n");
                textAreaOrdenesPagadas.append("Tipo de Examen: " + orden.getTipoExamen() + "\n");
                textAreaOrdenesPagadas.append("Descripción: " + orden.getDescripcion() + "\n");
                textAreaOrdenesPagadas.append("Precio: $" + orden.getCostoExamen() + "\n"); // Mostrar el precio
                textAreaOrdenesPagadas.append("\n");
            } else {
                textAreaOrdenesNoPagadas.append("Orden " + (i + 1) + ":\n");
                textAreaOrdenesNoPagadas.append("Tipo de Examen: " + orden.getTipoExamen() + "\n");
                textAreaOrdenesNoPagadas.append("Descripción: " + orden.getDescripcion() + "\n");
                textAreaOrdenesNoPagadas.append("Precio: $" + orden.getCostoExamen() + "\n"); // Mostrar el precio
                textAreaOrdenesNoPagadas.append("\n");
            }
        }
    }

    private Paciente obtenerPacientePorID(int idPaciente) {
        for (int i = 0; i < pacientes.size(); i++) {
            Paciente paciente = pacientes.getElementAt(i);
            if (paciente.getId() == idPaciente) {
                return paciente;
            }
        }
        return null;
    }

    private void pagarOrden(Paciente paciente, JTextArea textAreaOrdenesNoPagadas) {
        ListaSimple<Orden> ordenes = paciente.getOrdenes();
        if (!ordenes.isEmpty()) {
            Orden orden = ordenes.getElementAt(0); // FIFO: Se paga la primera orden de la lista
            if (!orden.isEstadoAutorizacion()) { // Verificar que la orden no esté ya pagada
                orden.setEstadoAutorizacion(true); // Marcar la orden como pagada
                JOptionPane.showMessageDialog(null, "Se ha pagado la orden: " + orden.getTipoExamen());
                // Actualizar la lista de pacientes después de pagar la orden
                gestionPacientesImp.actualizarPaciente(paciente);
                gestionPacientesImp.cargarPacientesDesdeJSON("pacientes.json");
            } else {
                JOptionPane.showMessageDialog(null, "La orden ya ha sido pagada anteriormente.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "El paciente no tiene órdenes pendientes por pagar.");
        }
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonPagar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextAreaNoPagas;
    private javax.swing.JTextArea jTextAreaPagas;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldPacienteNombre1;
    // End of variables declaration
}
