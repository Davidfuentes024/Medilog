/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.example.vistas;

import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import com.example.EstructurasDeDatos.ListaSimple;
import com.example.Model.Paciente;
import com.example.Model.Profesional;
import com.example.Model.Ticket;
import com.example.Service.GestionPacientesImp;
import com.example.Service.GestionProfesionales;
import com.example.Service.GestionTickets;

/**
 *
 * @author JUAN DAVID FUENTES
 */
public class CrearCitas extends javax.swing.JFrame {

    GestionPacientesImp gestionPacientesImp = new GestionPacientesImp();
    GestionProfesionales gestionProfesionales = new GestionProfesionales();
    ListaSimple<Paciente> pacientes;
    ListaSimple<Profesional> profesionales;
    Paciente pacienteSeleccionado;
    GestionTickets colaTickets = new GestionTickets();

    /**
     * Creates new form CrearCitas
     */
    public CrearCitas() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        gestionPacientesImp.cargarPacientesDesdeJSON("pacientes.json");
        gestionProfesionales.cargarProfesionalesDesdeJSON("profesionales.json");
        pacientes = gestionPacientesImp.getListaPacientes();
        profesionales = gestionProfesionales.obtenerTodosProfesionales();

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButtonGuardarCita = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jTextFieldPacienteNombre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jTextFieldIdPaciente = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxProfesional = new javax.swing.JComboBox<>();
        jComboBoxEspecialidad = new javax.swing.JComboBox<>();
        jComboBoxTipoExamen = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(42, 39, 69));

        jLabel3.setBackground(new java.awt.Color(42, 49, 69));
        jLabel3.setFont(new java.awt.Font("Roboto", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Busqueda Paciente");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\JUAN DAVID FUENTES\\Desktop\\png\\caduceo.png")); // NOI18N
        jLabel7.setToolTipText("");

        jButtonBuscar.setBackground(new java.awt.Color(42, 39, 69));
        jButtonBuscar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jButtonBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // Obtener el texto ingresado en el campo de búsqueda
                String nombreABuscar = jTextFieldPacienteNombre.getText();

                // Limpiar el modelo de la tabla para mostrar nuevos resultados
                DefaultTableModel modeloTabla = (DefaultTableModel) jTable1.getModel();
                modeloTabla.setRowCount(0);

                // Recorrer la lista de pacientes y buscar aquellos cuyos nombres coincidan
                // parcialmente con el texto ingresado
                for (int i = 0; i < pacientes.size(); i++) {
                    Paciente paciente = (Paciente) pacientes.getElementAt(i);
                    if (paciente.getNombres().toLowerCase().contains(nombreABuscar.toLowerCase())) {
                        // Si el nombre del paciente contiene la cadena buscada, agregarlo a la tabla de
                        // resultados
                        Object[] fila = { paciente.getId(), paciente.getNombres(), paciente.getApellidos(),
                                paciente.getEdad(), paciente.getIdentificacion(), paciente.getNumeroTelefono() };
                        modeloTabla.addRow(fila);
                    }
                }
            }
        });

        jTable1.setFont(new java.awt.Font("Roboto", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null },
                        { null, null, null, null, null, null }
                },
                new String[] {
                        "ID", "Nombre", "Apellido", "Edad", "Identificacíon", "Teléfono"
                }));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTable1.getSelectedRow();
                    if (selectedRow != -1) {
                        int idPacienteSeleccionado = (int) jTable1.getValueAt(selectedRow, 0);
                        pacienteSeleccionado = obtenerPacientePorID(idPacienteSeleccionado);
                        // Mostrar ventana emergente con la información del paciente seleccionado
                        if (pacienteSeleccionado != null) {
                            JOptionPane.showMessageDialog(null, pacienteSeleccionado.obtenerInformacion(),
                                    "Paciente Seleccionado", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    jTextFieldPacienteNombre
                            .setText(pacienteSeleccionado.getNombres() + " " + pacienteSeleccionado.getApellidos());
                    jTextFieldIdPaciente.setText(pacienteSeleccionado.getIdentificacion().toString());
                }
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(23, 23, 23))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 335,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(39, 39, 39)
                                                .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 23, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addContainerGap(18, Short.MAX_VALUE)));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 560, 500));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel1.setText("Citas");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 50));

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\JUAN DAVID FUENTES\\Desktop\\png\\24px.png")); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jButtonGuardarCita.setBackground(new java.awt.Color(42, 39, 69));
        jButtonGuardarCita.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jButtonGuardarCita.setForeground(new java.awt.Color(255, 255, 255));
        jButtonGuardarCita.setText("Guardar Cita");
        jButtonGuardarCita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonGuardarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if (jComboBoxProfesional.getSelectedItem() != null) {
                    String nombreProfesionalSeleccionado = jComboBoxProfesional.getSelectedItem().toString();
                    Profesional profesionalSeleccionado = obtenerProfesionalPorNombre(nombreProfesionalSeleccionado);

                    // Crear un nuevo ticket con la especialidad y el turno
                    int turnoTicket = pacienteSeleccionado.getTicket() != null
                            ? pacienteSeleccionado.getTicket().getTurno() + 1
                            : 1;
                    Ticket nuevoTicket = new Ticket(jComboBoxEspecialidad.getSelectedItem().toString(), turnoTicket);

                    // Actualizar el ticket del paciente seleccionado
                    pacienteSeleccionado.setTicket(nuevoTicket);

                    // Guardar los cambios en el paciente
                    gestionPacientesImp.guardarPacientesEnJSON("pacientes.json");

                    // Mostrar ventana emergente con la información del ticket
                    String mensajeTicket = "Se ha generado un nuevo ticket para el paciente:\n"
                            + jTextFieldPacienteNombre.getText() +
                            "\n"
                            +
                            "Especialidad: " + jComboBoxEspecialidad.getSelectedItem() + "\n" +
                            "Turno: " + turnoTicket;
                    JOptionPane.showMessageDialog(null, mensajeTicket, "Nuevo Ticket Generado",
                            JOptionPane.INFORMATION_MESSAGE);

                    // Reiniciar el paciente seleccionado
                    pacienteSeleccionado = null;
                } else {
                    System.out.println("Error: No se ha seleccionado ningún profesional.");
                }
            }
        });
        jPanel1.add(jButtonGuardarCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 120, 30));

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel5.setText("Especialidad");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel6.setText("Paciente");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        jSeparator4.setForeground(new java.awt.Color(42, 39, 69));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 190, 10));

        jTextFieldPacienteNombre.setForeground(new java.awt.Color(153, 153, 153));
        jTextFieldPacienteNombre.setToolTipText("");
        jTextFieldPacienteNombre.setBorder(null);
        jTextFieldPacienteNombre.setEditable(false);
        jTextFieldIdPaciente.setEditable(false);
        jTextFieldPacienteNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPacienteNombreActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldPacienteNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 210, -1));

        jLabel8.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel8.setText("Identificacion Paciente");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jSeparator5.setForeground(new java.awt.Color(42, 39, 69));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 190, 10));

        for (int i = 0; i < profesionales.size(); i++) {
            Profesional profesional = profesionales.getElementAt(i);
            jComboBoxProfesional.addItem(profesional.getNombre());
            System.out.println(profesional.getNombre()); // Imprimir el nombre del profesional
        }

        jTextFieldIdPaciente.setForeground(new java.awt.Color(153, 153, 153));
        jTextFieldIdPaciente.setToolTipText("");
        jTextFieldIdPaciente.setBorder(null);
        jTextFieldIdPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdPacienteActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldIdPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 210, -1));

        jLabel10.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel10.setText("Profesional");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, 20));

        jPanel1.add(jComboBoxProfesional, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 190, -1));

        jComboBoxEspecialidad.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jComboBoxEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medicina Interna",
                "Medicina Familiar", "Pediatría", "Medicina General", "Patología Clínica", "Bioquímica Clínica",
                "Medicina General", "Radiología", "Radioterapia", "Medicina Nuclear", "Medicina General", "Neumología",
                "Cardiología", "Medicina Deportiva", "Medicina General", "Gastroenterología", "Otorrinolaringología",
                "Urología", "Medicina General", "Genética Médica", "Oncología", "Medicina General", "Neurología",
                "Psiquiatría", "Medicina General", "Obstetricia y Ginecología", "Cardiología", "Radiología",
                "Medicina General" }));
        jPanel1.add(jComboBoxEspecialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 190, -1));

        jComboBoxTipoExamen.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jComboBoxTipoExamen.setModel(
                new javax.swing.DefaultComboBoxModel<>(new String[] { "Examen físico", "Exámenes de laboratorio",
                        "Imágenes diagnósticas", "Pruebas de función", "Exámenes endoscópicos", "Exámenes genéticos",
                        "Exámenes de imagenología funcional", "Exámenes de diagnóstico por ultrasonido", " " }));
        jPanel1.add(jComboBoxTipoExamen, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 190, -1));

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel4.setText("Tipo De Examen");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
    }// </editor-fold>

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jButtonGuardarCitaActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jTextFieldPacienteNombreActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jTextFieldIdPacienteActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearCitas.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearCitas.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearCitas.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearCitas.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearCitas().setVisible(true);
            }
        });
    }

    private Profesional obtenerProfesionalPorNombre(String nombreProfesional) {

        // Buscar y devolver el profesional con el nombre especificado
        for (int i = 0; i < profesionales.size(); i++) {
            Profesional profesional = profesionales.getElementAt(i);
            if (profesional.getNombre().equalsIgnoreCase(nombreProfesional)) {
                return profesional;
            }
        }

        return null; // Devolver null si no se encuentra ningún profesional con el nombre
                     // especificado
    }

    private Paciente obtenerPacientePorID(int idPaciente) {
        for (int i = 0; i < pacientes.size(); i++) {
            Paciente paciente = pacientes.getElementAt(i);
            if (paciente.getId() == idPaciente) {
                return paciente;
            }
        }
        return null;
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonGuardarCita;
    private javax.swing.JComboBox<String> jComboBoxEspecialidad;
    private javax.swing.JComboBox<String> jComboBoxProfesional;
    private javax.swing.JComboBox<String> jComboBoxTipoExamen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldIdPaciente;
    private javax.swing.JTextField jTextFieldPacienteNombre;
    // End of variables declaration
}
